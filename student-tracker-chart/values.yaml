# # Default values for student-tracker-chart.
# # This is a YAML-formatted file.
# # Declare variables to be passed into your templates.

appname: student-tracker-app
namespace: my-app-demo

secret:
  name: vault-secrets
  VAULT_ADDR: "http://135.233.112.30:8200"
  VAULT_ROLE_ID: "9055720e-3c61-aa32-90a7-492e3a9f5759"
  VAULT_SECRET_ID: "bc6162ef-da1f-013f-0d66-a1a8977c43d6"
  # VAULT_ADDR: "http://44.204.193.107:8200"
  # VAULT_ROLE_ID: "<as used in class or create secret with kubectl>"
  # VAULT_SECRET_ID: "<as used in class or create secret with kubectl>"

service:
  name: my-app-service
  protocol: TCP
  port: 80
  targetPort: 8000
  type: NodePort

app:
  name: my-app-demo
  replicas: 2
  containerPort: 8000

image:
  repository: keneojiteli/helm-deployment-for-gitops
  tag: "f98e55eb619a42c27d1268c308d8f154f26e0239"
  digest: ""
  pullPolicy: IfNotPresent

resources:
  requests:
    cpu: "100m"
    memory: "128Mi"
  limits:
    cpu: "500m"
    memory: "512Mi"

ingress:
  name: my-app-ingress
  className: nginx
  host: ec2-18-232-214-103.compute-1.amazonaws.com
  path: /
  pathType: Prefix


# namespace: my-app-demo

# app:
#   name: student-tracker

# service:
#   name: my-app-service
#   type: ClusterIP
#   protocol: TCP
#   port: 80
#   targetPort: 8000

# secret:
#   name: vault-secrets



# # This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
# replicaCount: 1

# # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
# image:
#   repository: nginx
#   # This sets the pull policy for images.
#   pullPolicy: IfNotPresent
#   # Overrides the image tag whose default is the chart appVersion.
#   tag: ""

# # This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
# imagePullSecrets: []
# # This is to override the chart name.
# nameOverride: ""
# fullnameOverride: ""

# # This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
# serviceAccount:
#   # Specifies whether a service account should be created
#   create: true
#   # Automatically mount a ServiceAccount's API credentials?
#   automount: true
#   # Annotations to add to the service account
#   annotations: {}
#   # The name of the service account to use.
#   # If not set and create is true, a name is generated using the fullname template
#   name: ""

# # This is for setting Kubernetes Annotations to a Pod.
# # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
# podAnnotations: {}
# # This is for setting Kubernetes Labels to a Pod.
# # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
# podLabels: {}

# podSecurityContext: {}
#   # fsGroup: 2000

# securityContext: {}
#   # capabilities:
#   #   drop:
#   #   - ALL
#   # readOnlyRootFilesystem: true
#   # runAsNonRoot: true
#   # runAsUser: 1000

# # This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
# service:
#   name: my-app-service
#   # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
#   type: ClusterIP
#   # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
#   port: 80

# # This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
# ingress:
#   enabled: false
#   className: ""
#   annotations: {}
#     # kubernetes.io/ingress.class: nginx
#     # kubernetes.io/tls-acme: "true"
#   hosts:
#     - host: chart-example.local
#       paths:
#         - path: /
#           pathType: ImplementationSpecific
#   tls: []
#   #  - secretName: chart-example-tls
#   #    hosts:
#   #      - chart-example.local

# resources: {}
#   # We usually recommend not to specify default resources and to leave this as a conscious
#   # choice for the user. This also increases chances charts run on environments with little
#   # resources, such as Minikube. If you do want to specify resources, uncomment the following
#   # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#   # limits:
#   #   cpu: 100m
#   #   memory: 128Mi
#   # requests:
#   #   cpu: 100m
#   #   memory: 128Mi

# # This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
# livenessProbe:
#   httpGet:
#     path: /
#     port: http
# readinessProbe:
#   httpGet:
#     path: /
#     port: http

# # This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
# autoscaling:
#   enabled: false
#   minReplicas: 1
#   maxReplicas: 100
#   targetCPUUtilizationPercentage: 80
#   # targetMemoryUtilizationPercentage: 80

# # Additional volumes on the output Deployment definition.
# volumes: []
# # - name: foo
# #   secret:
# #     secretName: mysecret
# #     optional: false

# # Additional volumeMounts on the output Deployment definition.
# volumeMounts: []
# # - name: foo
# #   mountPath: "/etc/foo"
# #   readOnly: true

# nodeSelector: {}

# tolerations: []

# affinity: {}
